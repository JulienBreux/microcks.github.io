<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentations on Microcks.io</title>
    <link>https://microcks.io/documentation/</link>
    <description>Recent content in Documentations on Microcks.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://microcks.io/documentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with Tests</title>
      <link>https://microcks.io/documentation/getting-started-tests/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://microcks.io/documentation/getting-started-tests/</guid>
      <description>Getting started (continue) with Tests Now that you have finished the Getting started guide, you should have a Microcks installation up-and-running and filled with some samples from the Microcks repository. The goal of this page is to show you how you can use Microcks to achieve Contract Testing for your API, either manually from the UI or in an automated way using the CLI tooling.
If you have not done it in the previous step, you will need to load one of Microcks samples: the Pastry API.</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>https://microcks.io/documentation/getting-started/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://microcks.io/documentation/getting-started/</guid>
      <description>Quickstart The easiest way to get started is using Docker Compose to start with minimal requirements. Make sure you have Docker installed on your system.
In your terminal issue the following commands:
  Clone this repository.
git clone https://github.com/microcks/microcks.git --depth 10   Change to the install folder
cd microcks/install/docker-compose   Spin up the containers
docker-compose up -d   This will start the necessary containers and setup a simple environment for you to use.</description>
    </item>
    
  </channel>
</rss>
