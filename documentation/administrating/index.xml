<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Administrating on Microcks.io</title>
    <link>https://microcks.io/documentation/administrating/</link>
    <description>Recent content in Administrating on Microcks.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://microcks.io/documentation/administrating/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Managing Users</title>
      <link>https://microcks.io/documentation/administrating/users/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://microcks.io/documentation/administrating/users/</guid>
      <description>Introduction Since its inception, Microcks relies on a third party component named Keycloak for managing security related topics like users identification, users authentication and habilitations as well as API endpoints protection. Keycloak is also used for providing service accounts authentication and authorization. This topic is detailed in a dedicated page.
Basic installation of Microcks (through Kubernetes Operator, Helm Chart, OpenShift template or Docker-compose) comes with its own Keycloak instance embedding the definitions of Microcks needed component into what is called a realm.</description>
    </item>
    
    <item>
      <title>External Secrets</title>
      <link>https://microcks.io/documentation/administrating/secrets/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://microcks.io/documentation/administrating/secrets/</guid>
      <description>Introduction Starting with Microcks version 0.7.0, we add the ability to manage some forms of Secrets in order to access private HTTP(S) repositories su as Git ones.
Secrets can only be managed by Microcks administrator - we mean people having the administrator role assigned. If you need further information on how to manage users and roles, please check here. Secrets management is simply a thumbnail with the Administration page that is available from the vertical menu on the left once logged in as administrator.</description>
    </item>
    
    <item>
      <title>Repository Snapshots</title>
      <link>https://microcks.io/documentation/administrating/snapshots/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://microcks.io/documentation/administrating/snapshots/</guid>
      <description>Introduction Microcks allows users to export a part of its database as a Snapshot and import such a Snapshot within another instance. Such Snapshots are not complete database exports because they only integrate the Services &amp;amp; APIs definitions parts. As an example, they do not embed all the tests runs and analytics data.
Snapshots are lightweight structures that can be used to: * easily exchange a set of Services &amp;amp; APIs definition with another instance of Microcks, * easily setup a new Microcks instance dedicated for mocking a functionnal subsystem - optionally with different configured response times for simulating a real behaviour, * easily backup your instance if you do not bother loosing tests runs and analytics data</description>
    </item>
    
  </channel>
</rss>